<ResourceDictionary xmlns="http://schemas.microsoft.com/netfx/2007/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Converters="clr-namespace:ICSharpCode.WpfDesign.Designer.Converters" xmlns:PropertyGrid="clr-namespace:ICSharpCode.WpfDesign.Designer.PropertyGrid" xmlns:PropertyGridBase="clr-namespace:ICSharpCode.WpfDesign.PropertyGrid;assembly=ICSharpCode.WpfDesign" xmlns:Controls="clr-namespace:ICSharpCode.WpfDesign.Designer.Controls" xmlns:propertyGrid="clr-namespace:ICSharpCode.WpfDesign.Designer.PropertyGrid">
	<Style x:Key="ExpandButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Background="Transparent">
						<Border Width="9" Height="9" SnapsToDevicePixels="true" BorderBrush="#FF7898B5" BorderThickness="1" CornerRadius="1">
							<Border.Background>
								<LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
									<GradientStop Color="White" Offset=".2" />
									<GradientStop Color="#FFC0B7A6" Offset="1" />
								</LinearGradientBrush>
							</Border.Background>
							<Path Margin="1,1,1,1" x:Name="ExpandPath" Fill="Black" Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z" />
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Data" TargetName="ExpandPath" Value="M 0 2 L 0 3 L 5 3 L 5 2 Z" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MoreButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Background="#F9F9F4" BorderThickness="0 0 0 1" BorderBrush="{x:Static SystemColors.ControlBrush}">
						<!--<TextBlock Text="More..."
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Left"
                                       Margin="18 0 0 0"
                                       Foreground="{x:Static SystemColors.ControlDarkBrush}" />-->
						<Path x:Name="arrow" Data="M 0 0 L 5 5 L 10 0" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{x:Static SystemColors.ControlDarkBrush}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="arrow" Property="Data" Value="M 0 5 L 5 0 L 10 5" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="CategoryToggleStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border BorderThickness="0 1 0 0" BorderBrush="#ECE9D8">
						<StackPanel Orientation="Horizontal" Background="{x:Static  SystemColors.ControlLightBrush}">
							<ToggleButton Style="{StaticResource ExpandButtonStyle}" IsChecked="{Binding IsExpanded}" VerticalAlignment="Center" Margin="3 0 7 0" />
							<TextBlock Text="{Binding Name}" VerticalAlignment="Center" FontWeight="Bold" Foreground="{x:Static SystemColors.ControlDarkBrush}" />
						</StackPanel>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="CategoryExpanderStyle" TargetType="Expander">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Expander">
					<DockPanel>
						<ToggleButton Height="17" IsChecked="{Binding IsExpanded}" DockPanel.Dock="Top" Style="{StaticResource CategoryToggleStyle}" />
						<ContentPresenter x:Name="ExpandSite" Visibility="Collapsed" />
					</DockPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="True">
							<Setter Property="Visibility" Value="Visible" TargetName="ExpandSite" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MoreExpanderStyle" TargetType="Expander">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Expander">
					<DockPanel>
						<ToggleButton IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource MoreButtonStyle}" DockPanel.Dock="Top" Height="12" />
						<ContentPresenter x:Name="ExpandSite" Visibility="Collapsed" />
					</DockPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="True">
							<Setter Property="Visibility" Value="Visible" TargetName="ExpandSite" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="SelectedImageButton" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
		<Setter Property="BorderBrush" Value="Transparent" />
		<Style.Triggers>
			<Trigger Property="IsChecked" Value="True">
				<Setter Property="BorderBrush" Value="Blue" />
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" Value="Black" />
				<Setter Property="BorderBrush" Value="DeepSkyBlue" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type PropertyGrid:PropertyGridView}">
		<Setter Property="Background" Value="{x:Static SystemColors.ControlLightBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type PropertyGrid:PropertyGridView}">
					<DockPanel LastChildFill="True" Background="{TemplateBinding Background}">
						<DockPanel.Resources>
							<DataTemplate DataType="{x:Type PropertyGridBase:Category}">
								<Expander Header="{Binding Name}" Style="{StaticResource CategoryExpanderStyle}" IsExpanded="{Binding IsExpanded}" Visibility="{Binding IsVisible, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
									<ItemsControl VirtualizingStackPanel.ScrollUnit="Pixel" VirtualizingStackPanel.IsVirtualizing="True" ScrollViewer.CanContentScroll="True" ItemsSource="{Binding Properties}">
										<ItemsControl.ItemsPanel>
											<ItemsPanelTemplate>
												<VirtualizingStackPanel />
											</ItemsPanelTemplate>
										</ItemsControl.ItemsPanel>
										<ItemsControl.Template>
											<ControlTemplate>
												<Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
													<ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
												</Border>
											</ControlTemplate>
										</ItemsControl.Template>
									</ItemsControl>
								</Expander>
							</DataTemplate>
							<DataTemplate DataType="{x:Type PropertyGridBase:PropertyNode}">
								<StackPanel Visibility="{Binding IsVisible, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
									<Border x:Name="uxPropertyNodeRow" MinHeight="20" BorderThickness="0 0 0 1" BorderBrush="{x:Static SystemColors.ControlBrush}" DockPanel.Dock="Top">
										<DockPanel>
											<DockPanel Width="{Binding FirstColumnWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type PropertyGrid:PropertyGridView}}}" DockPanel.Dock="Left">
												<ToggleButton x:Name="expandButton" DockPanel.Dock="Left" Margin="{Binding Level, Converter={x:Static Converters:LevelConverter.Instance}}" Style="{StaticResource ExpandButtonStyle}" IsChecked="{Binding IsExpanded}" Visibility="{Binding HasChildren, Converter={x:Static Converters:HiddenWhenFalse.Instance}}" />
												<Rectangle Width="8" Height="8" Stroke="Black" Fill="{Binding IsSet, Converter={x:Static Converters:BlackWhenTrue.Instance}}" StrokeThickness="1" DockPanel.Dock="Right" Margin="4,0,4,0" VerticalAlignment="Center" />
												<TextBlock Text="{Binding Name}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Margin="7 0 0 0" ToolTip="{Binding Description}" FontWeight="{Binding IsSet, Converter={x:Static Converters:BoldWhenTrue.Instance}}" Foreground="{Binding NameForeground}" />
											</DockPanel>
											<Border BorderThickness="1 0 0 0" BorderBrush="{x:Static SystemColors.ControlBrush}">
												<ContentPresenter x:Name="editorContainer" Content="{Binding Editor}" VerticalAlignment="Center" Margin="3 0" />
											</Border>
										</DockPanel>
									</Border>
									<StackPanel Visibility="{Binding IsExpanded, Converter={x:Static Converters:CollapsedWhenFalse.Instance}}">
										<ItemsControl Background="#F9F9F4"  Visibility="{Binding Children.Count, Converter={x:Static Converters:CollapsedWhenZero.Instance}}" VirtualizingStackPanel.ScrollUnit="Pixel" VirtualizingStackPanel.IsVirtualizing="True" ScrollViewer.CanContentScroll="True" ItemsSource="{Binding Children}">
											<ItemsControl.ItemsPanel>
												<ItemsPanelTemplate>
													<VirtualizingStackPanel />
												</ItemsPanelTemplate>
											</ItemsControl.ItemsPanel>
											<ItemsControl.Template>
												<ControlTemplate>
													<Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
														<ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
													</Border>
												</ControlTemplate>
											</ItemsControl.Template>
										</ItemsControl>
										<Expander Visibility="{Binding MoreChildren.Count, Converter={x:Static Converters:CollapsedWhenZero.Instance}}" Style="{StaticResource MoreExpanderStyle}">
											<ItemsControl Background="#F9F9F4" VirtualizingStackPanel.ScrollUnit="Pixel" VirtualizingStackPanel.IsVirtualizing="True" ScrollViewer.CanContentScroll="True" ItemsSource="{Binding MoreChildren}">
												<ItemsControl.ItemsPanel>
													<ItemsPanelTemplate>
														<VirtualizingStackPanel />
													</ItemsPanelTemplate>
												</ItemsControl.ItemsPanel>
												<ItemsControl.Template>
													<ControlTemplate>
														<Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
															<ScrollViewer Padding="{TemplateBinding Control.Padding}" Focusable="False">
																<ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
															</ScrollViewer>
														</Border>
													</ControlTemplate>
												</ItemsControl.Template>
											</ItemsControl>
										</Expander>
									</StackPanel>
								</StackPanel>
								<DataTemplate.Triggers>
									<DataTrigger Binding="{Binding IsEnabled}" Value="False">
										<Setter TargetName="editorContainer" Property="Opacity" Value="0.5" />
									</DataTrigger>
								</DataTemplate.Triggers>
							</DataTemplate>
							<DataTemplate DataType="{x:Type FontFamily}">
								<TextBlock Text="{Binding}" Height="15" FontFamily="{Binding}" FontSize="12" />
							</DataTemplate>
						</DockPanel.Resources>
						<Grid DockPanel.Dock="Top" Height="78">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="50" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Border Background="White" Grid.Column="0" BorderBrush="Black" BorderThickness="1" Width="44" Height="44" HorizontalAlignment="Left" Padding="2" Margin="6,0,0,0">
								<Rectangle>
									<Rectangle.Fill>
										<VisualBrush Stretch="Uniform" Visual="{Binding SingleItem.Component}" />
									</Rectangle.Fill>
								</Rectangle>
							</Border>
							<TextBlock Grid.Column="1" Text="Name:" Margin="6,30,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" />
							<TextBlock Grid.Column="1" Text="Type:" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="6,8,0,0" />
							<TextBlock Grid.Column="1" Text="Filter:" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="6,54,0,0" />
							<Controls:EnterTextBox Grid.Column="1" x:Name="NameTextBox" Text="{Binding Name}" IsEnabled="{Binding IsNameEnabled}" Margin="44,28,6,0" Height="19.277" VerticalAlignment="Top">
								<Controls:EnterTextBox.Style>
									<Style TargetType="{x:Type TextBox}">
										<Style.Triggers>
											<DataTrigger Binding="{Binding IsNameCorrect}" Value="False">
												<Setter Property="BorderBrush" Value="Red" />
											</DataTrigger>
											<MultiDataTrigger>
												<MultiDataTrigger.Conditions>
													<Condition Binding="{Binding IsNameEnabled}" Value="True" />
													<Condition Binding="{Binding CurrentTab}" Value="Events" />
													<Condition Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="" />
												</MultiDataTrigger.Conditions>
												<Setter Property="BorderBrush" Value="Red" />
											</MultiDataTrigger>
										</Style.Triggers>
									</Style>
								</Controls:EnterTextBox.Style>
							</Controls:EnterTextBox>
							<TextBlock Grid.Column="1" Text="{Binding SingleItem.ComponentType.Name}" ToolTip="{Binding SingleItem.ComponentType}" Margin="44,8,6,0" Height="13.277" VerticalAlignment="Top" />
							<Controls:ClearableTextBox Grid.Column="1" Text="{Binding Filter, UpdateSourceTrigger=PropertyChanged}" Margin="44,52,6,0" VerticalAlignment="Top" Height="19" />
						</Grid>
						<Grid DockPanel.Dock="Top" Height="30">
							<StackPanel Orientation="Horizontal">
								<StackPanel Margin="3" HorizontalAlignment="Left" Orientation="Horizontal">
									<RadioButton Style="{StaticResource SelectedImageButton}" GroupName="SortMode" IsChecked="{Binding GroupMode, Converter={x:Static Converters:EnumBoolean.Instance}, ConverterParameter=GroupByPopularCategorys}" Margin="3,0,0,0" Width="20" Height="20">
										<Image Source="/ICSharpCode.WpfDesign.Designer;component/Images/Icons.16x16.Properties.Categorized.png" Stretch="None" />
									</RadioButton>
									<!--<RadioButton Style="{StaticResource SelectedImageButton}" GroupName="SortMode" IsChecked="{Binding GroupMode, Converter={x:Static Converters:EnumBoolean.Instance}, ConverterParameter=GroupByCategorys}" Margin="3,0,0,0" Width="20" Height="20">
										<Image Source="/ICSharpCode.WpfDesign.Designer;component/Images/group2.png" Stretch="None" />
									</RadioButton>
									<RadioButton Style="{StaticResource SelectedImageButton}" GroupName="SortMode" IsChecked="{Binding GroupMode, Converter={x:Static Converters:EnumBoolean.Instance}, ConverterParameter=Ungrouped}" Margin="3,0,0,0" Width="20" Height="20">
										<Image Source="/ICSharpCode.WpfDesign.Designer;component/Images/Icons.16x16.Properties.SortAlphabet.png" Stretch="None" />
									</RadioButton>-->
								</StackPanel>
								<StackPanel Margin="3" HorizontalAlignment="Left" Orientation="Horizontal" Visibility="{Binding ShowPropertiesEventsSelector, Converter={x:Static Converters:CollapsedWhenFalse.Instance}, ElementName=root}">
									<RadioButton Style="{StaticResource SelectedImageButton}" GroupName="ShowType" IsChecked="{Binding CurrentTab, Converter={x:Static Converters:EnumBoolean.Instance}, ConverterParameter=Properties}" Margin="3,0,0,0" Width="20" Height="20">
										<Image Source="/ICSharpCode.WpfDesign.Designer;component/Images/Icons.16x16.Properties.Properties.png" Stretch="None" />
									</RadioButton>
									<RadioButton Style="{StaticResource SelectedImageButton}" GroupName="ShowType" IsChecked="{Binding CurrentTab, Converter={x:Static Converters:EnumBoolean.Instance}, ConverterParameter=Events}" Margin="3,0,0,0" Width="20" Height="20">
										<Image Source="/ICSharpCode.WpfDesign.Designer;component/Images/Icons.16x16.Properties.Events.png" Stretch="None" />
									</RadioButton>
								</StackPanel>
							</StackPanel>
						</Grid>
						<Grid x:Name="c1" Background="White">
							<!--<ScrollViewer HorizontalScrollBarVisibility="Disabled" Visibility="{Binding CurrentTab, Converter={x:Static Converters:EnumVisibility.Instance}, ConverterParameter=Properties}">
								<ItemsControl ItemsSource="{Binding Categories}" />
							</ScrollViewer>-->
							<!--<ScrollViewer HorizontalScrollBarVisibility="Disabled" Visibility="{Binding CurrentTab, Converter={x:Static Converters:EnumVisibility.Instance}, ConverterParameter=Events}">
								<ItemsControl ItemsSource="{Binding Events}" />
							</ScrollViewer>-->
							<ItemsControl VirtualizingStackPanel.ScrollUnit="Pixel" Visibility="{Binding CurrentTab, Converter={x:Static Converters:EnumVisibility.Instance}, ConverterParameter=Properties}" VirtualizingStackPanel.IsVirtualizing="True" ScrollViewer.CanContentScroll="True" ItemsSource="{Binding Categories}">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<VirtualizingStackPanel />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.Template>
									<ControlTemplate>
										<Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
											<ScrollViewer Padding="{TemplateBinding Control.Padding}" Focusable="False">
												<ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
											</ScrollViewer>
										</Border>
									</ControlTemplate>
								</ItemsControl.Template>
							</ItemsControl>
							<ItemsControl VirtualizingStackPanel.ScrollUnit="Pixel" Visibility="{Binding CurrentTab, Converter={x:Static Converters:EnumVisibility.Instance}, ConverterParameter=Events}" VirtualizingStackPanel.IsVirtualizing="True" ScrollViewer.CanContentScroll="True" ItemsSource="{Binding Events}">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<VirtualizingStackPanel />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.Template>
									<ControlTemplate>
										<Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
											<ScrollViewer Padding="{TemplateBinding Control.Padding}" Focusable="False">
												<ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
											</ScrollViewer>
										</Border>
									</ControlTemplate>
								</ItemsControl.Template>
							</ItemsControl>
							<Thumb x:Name="PART_Thumb" HorizontalAlignment="Left" Width="4" Margin="-2 0 0 0" Cursor="SizeWE">
								<Thumb.RenderTransform>
									<TranslateTransform X="{Binding FirstColumnWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
								</Thumb.RenderTransform>
								<Thumb.Template>
									<ControlTemplate>
										<Border Background="Transparent" />
									</ControlTemplate>
								</Thumb.Template>
							</Thumb>
						</Grid>
					</DockPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>